AWSTemplateFormatVersion: "2010-09-09"
Description: Simple stack that introduces cfn-init
Parameters:
  NameOfService:
    Description: "The name of the service this stack is to be used for."
    Type: String
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access into the server
    Type: AWS::EC2::KeyPair::KeyName
Mappings: # Amazon Linux 2 AMI in each region (updated from initial course config)
  RegionMap: # Updated from initial course config, added us-east-2 and us-west-2, removed EU and AP regions
    us-east-1:
      AMI: ami-0323c3dd2da7fb37d
    us-east-2:
      AMI: ami-0f7919c33c90f5b58
    us-west-1:
      AMI: ami-06fcc1f0bc2c8943f
    us-west-2:
      AMI: ami-0d6621c01e8c2de2c    
Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Metadata: 
      AWS::CloudFormation::Init:
        config: 
          packages: # Install these packages on the instance using Yum
            yum:
              httpd: []
              php: []
          files: # Create the below file and sub in the PHP string
            /var/www/html/index.php:
              content: !Sub |
                <?php print "Hello world Kevin was here!"; ?>
          services: # Configure HTTP to start, and be enabled using sysvinit
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true
    # Declaritive approach to setting up EC2 instances
    # Config key can consist of packages, groups, users, sources, files, commands and services
    # If using multiple config keys, use Configsets, a Configset contains a list of all config keys
    # in the order they should run
    Properties:
      InstanceType: t3.micro
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - !Ref AWS::Region
        - AMI
      SecurityGroupIds:
        - !Ref MySecurityGroup
      Tags:
        - Key: Name
          Value: !Ref NameOfService
      KeyName: !Ref KeyName
      UserData:
        'Fn::Base64': 
          !Sub |
            #!/bin/bash -xe            
            # Ensure AWS CFN Bootstrap is the latest
            yum install -y aws-cfn-bootstrap
            # Install the files and packages from the metadata
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance  --region ${AWS::Region}
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Open Ports 22 and 80
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
Outputs:
  Website:
    Description: The Public DNS for the EC2 Instance
    Value: !Sub 'http://${EC2Instance.PublicDnsName}'